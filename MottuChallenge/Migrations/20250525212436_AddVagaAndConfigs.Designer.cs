// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MottuChallenge.Data;
using Oracle.EntityFrameworkCore.Metadata;

#nullable disable

namespace MottuChallenge.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250525212436_AddVagaAndConfigs")]
    partial class AddVagaAndConfigs
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            OracleModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MottuChallenge.Model.Motos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Chassi")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("NVARCHAR2(2000)");

                    b.Property<int?>("VagaId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("VagaId");

                    b.ToTable("Motos");
                });

            modelBuilder.Entity("MottuChallenge.Model.Ocupacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataOcupacao")
                        .HasColumnType("TIMESTAMP(7)");

                    b.Property<int>("MotoId")
                        .HasColumnType("NUMBER(10)");

                    b.Property<int>("VagaId")
                        .HasColumnType("NUMBER(10)");

                    b.HasKey("Id");

                    b.HasIndex("MotoId");

                    b.HasIndex("VagaId");

                    b.ToTable("Ocupacoes");
                });

            modelBuilder.Entity("MottuChallenge.Model.Vaga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("NUMBER(10)");

                    OraclePropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Localizacao")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("NVARCHAR2(100)");

                    b.Property<short>("Ocupada")
                        .HasColumnType("NUMBER(5)");

                    b.HasKey("Id");

                    b.ToTable("Vagas");
                });

            modelBuilder.Entity("MottuChallenge.Model.Motos", b =>
                {
                    b.HasOne("MottuChallenge.Model.Vaga", "Vaga")
                        .WithMany()
                        .HasForeignKey("VagaId");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("MottuChallenge.Model.Ocupacao", b =>
                {
                    b.HasOne("MottuChallenge.Model.Motos", "Moto")
                        .WithMany()
                        .HasForeignKey("MotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MottuChallenge.Model.Vaga", "Vaga")
                        .WithMany("Ocupacoes")
                        .HasForeignKey("VagaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Moto");

                    b.Navigation("Vaga");
                });

            modelBuilder.Entity("MottuChallenge.Model.Vaga", b =>
                {
                    b.Navigation("Ocupacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
